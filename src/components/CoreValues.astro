---
import DynamicIcon from "@components/helpers/DynamicIcon.astro";
import coreValues from "@data/coreValues.json";

// Props: baggrundsfarve
const { background = "var(--bg-black-hero)", sectionTextColor = "var(--white)", cardBackground = "var(--white)", cardTextColor = "var(--black)", btnBackground = "var(--white)", btnTextColor = "var(--black)" } = Astro.props;
---

<section class="full-width" style={`background-color: ${background}; color: ${sectionTextColor};`}>
  <article class="container">
    <div class="text-content">
      <p class="undertitel">GROWING WITH OUR CLIENTS</p>
      <h2>Our core values & principles</h2>
      <p>Capitalize on low hanging fruit to identify a ballpark value added activity beta test. Override the digital divide with additional from DevOps.</p>
    </div>

    <div class="getintouch-btn">
      <button class="btn" style={`background-color: ${btnBackground}; color: ${btnTextColor};`}>Get in touch</button>
    </div>

    <div class="core-values-data">
      <ul class="cards">
        {
          coreValues.values.map((value) => (
            <li class="card" style={`background-color: ${cardBackground}; color: ${cardTextColor};`}>
              <DynamicIcon name={value.icon} />
              <h3>{value.title}</h3>
              <p>{value.description}</p>
              <a href={value.link.url}>{value.link.text} →</a>
            </li>
          ))
        }
      </ul>
    </div>
  </article>
</section>

<style>
  section {
    .container {
      display: grid;
      grid-template-columns: 1fr auto;
      grid-template-rows: auto auto;
      gap: 2rem;
      margin-bottom: 2.12rem;
      align-items: end;
    }

    .text-content {
      margin: 0;
      max-width: 56ch;
    }
    .getintouch-btn {
      grid-column: 2;
      grid-row: 1;
      align-self: end;
    }

    .icon {
      background-color: var(--black);
      color: var(--white);
      width: 3.3rem;
      height: 3.3rem;
      border-radius: 3.3rem;
      padding: 0.65rem;
    }

    .core-values-data {
      grid-column: 1 / -1;
      grid-row: 2;
    }

    .cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2.25rem;
      color: var(--black);
      align-items: start;
      list-style: none;

      .card {
        padding: 1rem;
        border-radius: 1.25rem;
      }
      a {
        color: var(--black);
      }
    }
  }
</style>

<!-- 
--- import DynamicIcon from "@components/helpers/DynamicIcon.astro"; import coreValues from "@data/coreValues.json"; // Props: baggrund, tekstfarve, kort-baggrund const {
  ((background = "var(--bg-black-hero)"), (textColor = "var(--white)"), (cardBackground = "var(--bg-card-light)"))
} = Astro.props; ---

<section class="full-width" style={`background-color: ${background}; color: ${textColor};`}>
  <article class="container">
    <div class="text-content">
      <p class="undertitel">GROWING WITH OUR CLIENTS</p>
      <h2>Our core values & principles</h2>
      <p>Capitalize on low hanging fruit to identify a ballpark value added activity beta test. Override the digital divide with additional from DevOps.</p>
    </div>

    <div class="getintouch-btn">
      <button class="btn">Get in touch</button>
    </div>

    <div class="core-values-data">
      <ul class="cards">
        {
          coreValues.values.map((value) => (
            <li class="card" style={`background-color: ${cardBackground}; color: ${textColor};`}>
              <DynamicIcon name={value.icon} />
              <h3>{value.title}</h3>
              <p>{value.description}</p>
              <a href={value.link.url}>{value.link.text} →</a>
            </li>
          ))
        }
      </ul>
    </div>
  </article>
</section>

<style>
  section {
    .container {
      display: grid;
      grid-template-columns: 1fr auto;
      grid-template-rows: auto auto;
      gap: 2rem;
      margin-bottom: 2.12rem;
      align-items: end;
    }

    .text-content {
      margin: 0;
      max-width: 56ch;
    }

    .getintouch-btn {
      grid-column: 2;
      grid-row: 1;
      align-self: end;

      .btn {
        background-color: var(--white);
        color: var(--black);
      }
    }

    .icon {
      background-color: var(--black);
      color: var(--white);
      width: 3.3rem;
      height: 3.3rem;
      border-radius: 3.3rem;
      padding: 0.65rem;
    }

    .core-values-data {
      grid-column: 1 / -1;
      grid-row: 2;
    }

    .cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2.25rem;
      align-items: start;
    }
  }
</style>
-->
